
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 100%;
        z-index: 1 !important;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        z-index: 0 !important;
    }

    #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
    }

    #infowindow-content .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }

    .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
    }

    #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
    }

    .pac-controls {
        display: inline-block;
        padding: 5px 11px;
    }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

    #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
    }

</style>
<title>Simple Map</title>
<meta name="viewport" content="initial-scale=1.0">
<meta charset="utf-8">
<h2>Servicios solicitados.</h2>
<div class="row">
    <div class="col-md-9">
        <div class="ibox">
            <div class="ibox-title">
                <p>
                    Ahora para finalizar su pedido sera nesesario que nos brinde su ubicacion actual
                </p>

                <div class="ibox ">
                    <div class="ibox-content">
                        <div class="pac-card" id="pac-card">
                            <div>
                                
                                <div id="title">
                                    <img style="background-color:white;width:10%;height:10%;" src="~/Images/WashE/6.png" />
                                    Busqueda inteligente
                                </div>
                            </div>
                            <div id="pac-container">
                                <br />
                                <input id="pac-input" type="text"
                                       placeholder="Digite el nombre de su ciudad, barrio o colonia">
                            </div>
                        </div>

                        <div class="google-map" id="map1" >
                            </div>
                        </div>
                        <div id="infowindow-content">
                            <img src="" width="16" height="16" id="place-icon">
                            <span id="place-name" class="title"></span><br>
                            <span id="place-address"></span>
                        </div>
                    </div>

                </div>
                Lat: <p id="lattt"></p>
                Long: <p id="longgg"></p>
                <p></p>
            </div>
        </div>
    </div>

@section Scripts{

    @Scripts.Render("https://maps.googleapis.com/maps/api/js?key=AIzaSyC86enFzj2wGCWtXx8VIOL5Wm_Ymv_ya5E&libraries=places")
    @*&libraries=places")*@
    <script type="text/javascript">
        //'use strict';
        var lat1 = 0;
        var long = 0;
        var coordenadaUsuario;


        $(document).ready(function () {

            if ("geolocation" in navigator) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    lat1 = position.coords.latitude;
                    long = position.coords.longitude;
                    //console.log("Found your location nLat : " + lat1 + " nLang :" + long);
                    coordenadaUsuario = new google.maps.LatLng(lat1, long);
                    //console.log('Aqui es: ' + coordenadaUsuario);
                    init();
                });
            } else {
                console.log("Browser doesn't support geolocation!");
            }

        });


        //google.maps.event.addDomListener(window, 'load', init);


        function init() {

            var mapElement1 = document.getElementById('map1');

            console.log('finalmente es: ' + coordenadaUsuario);
            if (typeof coordenadaUsuario === "undefined") {

            coordenadaUsuario = { lat: 15.5038827, lng: -88.01386190000001 };
            console.log(coordenadaUsuario);
            } else {
                coordenadaUsuario = { lat: lat1, lng: long }
                console.log(coordenadaUsuario);
            }

            var mapOptions1 = {
                zoom: 10,
                center: coordenadaUsuario,
                streetViewControl: false,
                // Style for Google Maps
                //styles: [{ "featureType": "water", "stylers": [{ "saturation": 43 }, { "lightness": -11 }, { "hue": "#0088ff" }] }, { "featureType": "road", "elementType": "geometry.fill", "stylers": [{ "hue": "#ff0000" }, { "saturation": -100 }, { "lightness": 99 }] }, { "featureType": "road", "elementType": "geometry.stroke", "stylers": [{ "color": "#808080" }, { "lightness": 54 }] }, { "featureType": "landscape.man_made", "elementType": "geometry.fill", "stylers": [{ "color": "#ece2d9" }] }, { "featureType": "poi.park", "elementType": "geometry.fill", "stylers": [{ "color": "#ccdca1" }] }, { "featureType": "road", "elementType": "labels.text.fill", "stylers": [{ "color": "#767676" }] }, { "featureType": "road", "elementType": "labels.text.stroke", "stylers": [{ "color": "#ffffff" }] }, { "featureType": "poi", "stylers": [{ "visibility": "off" }] }, { "featureType": "landscape.natural", "elementType": "geometry.fill", "stylers": [{ "visibility": "on" }, { "color": "#b8cb93" }] }, { "featureType": "poi.park", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.sports_complex", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.medical", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.business", "stylers": [{ "visibility": "simplified" }] }]
            };

            var map1 = new google.maps.Map(mapElement1, mapOptions1);


            var marker = new google.maps.Marker({
                position: coordenadaUsuario,
                map: map1,
                draggable: true
            });

            google.maps.event.addListener(marker, 'drag', function (event) {
                $('#lattt').text(event.latLng.lat());
                $('#longgg').text(event.latLng.lng());
            });


            var card = document.getElementById('pac-card');
            var input = document.getElementById('pac-input');

            map1.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

            var autocomplete = new google.maps.places.Autocomplete(input);

            // Bind the map's bounds (viewport) property to the autocomplete object,
            // so that the autocomplete requests use the current map bounds for the
            // bounds option in the request.
            autocomplete.bindTo('bounds', map1);

            // Set the data fields to return when the user selects a place.
            autocomplete.setFields(
                ['address_components', 'geometry', 'icon', 'name']);
            
            autocomplete.addListener('place_changed', function () {
                marker.setVisible(false);
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert("No details available for input: '" + place.name + "'");
                    return;
                }

                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    map1.fitBounds(place.geometry.viewport);
                } else {
                    map1.setCenter(place.geometry.location);
                    map1.setZoom(17);  // Why 17? Because it looks good.
                }
                marker.setPosition(place.geometry.location);

                var pos = place.geometry.location.lat();
                var pos1 = place.geometry.location.lng();

                $('#lattt').text(pos);
                $('#longgg').text(pos1);


                marker.setVisible(true);



                var address = '';
                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }
            });//autocomplete


            //var ConfigDR = {
            //    map: map1
            //}

            //var ConfigDS = {
            //    origin: coordenadaUsuario,
            //    destination: new google.maps.LatLng(15.728550760877717, -87.90162748021238),
            //    travelMode: 'DRIVING'
            //}

            //var ds = new google.maps.DirectionsService();

            //var ds = new google.maps.DirectionsService();
            ////var dr = new google.maps.DirectionsRenderer();

            //var dr = new google.maps.DirectionsRenderer(
            //    ConfigDR
            //);
            
            //ds.route(ConfigDS, function(result, status) {
            //    if (status == 'OK') {
            //        dr.setDirections(result);
            //    } else {
            //        alert('Ruta invalida' + status);
            //    }
            //});

        }//init



    </script>
}