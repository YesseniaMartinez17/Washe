@model Inspinia_MVC5.Models.tbPersonas

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Datos personales.</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Registrar persona</h5>
                </div>
                <div class="ibox-title">
                    <p>Por medio de deste formuario se pueden egistrar clientes de forma directa sin que su cuenta requiera de aprobación.</p>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Create", "Personas", FormMethod.Post, new { enctype = "multipart/form-data"}))
                    {

                    <div class="form-horizontal">


                        <div class="form-group ">
                            @Html.LabelFor(model => model.per_Nombres, new { @class = "control-label col-md-1 col-md-offset-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.per_Nombres,new { required = "required" })
                                @Html.ValidationMessageFor(model => model.per_Nombres)
                            </div>

                            @Html.LabelFor(model => model.per_Apellidos, new { @class = "control-label col-md-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.per_Apellidos)
                                @Html.ValidationMessageFor(model => model.per_Apellidos)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.per_Identidad, new { @class = "control-label col-md-1  col-md-offset-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.per_Identidad, new { htmlAttributes = new { @class = "mascaraIdentidad" } })
                                @Html.ValidationMessageFor(model => model.per_Identidad)
                            </div>

                            @Html.LabelFor(model => model.per_Telefono, new { @class = "control-label col-md-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.per_Telefono, new { htmlAttributes = new { @class = "mascaratelefono", @data_mask = "+999 9999 9999" } })
                                @Html.ValidationMessageFor(model => model.per_Telefono)
                            </div>
                        </div>

                        <div class="form-group" id="data_3">
                            @Html.LabelFor(model => model.per_FechaNacimiento, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @*@Html.EditorFor(model => model.per_FechaNacimiento)*@
                                    <input type="text" id="per_FechaNacimiento" class="text-box single-line" disabled />
                                    @Html.ValidationMessageFor(model => model.per_FechaNacimiento)
                                </div>
                                <input type="date" name="per_FechaNacimiento" id="per_Enviar" class="text-box single-line" />
                            </div>
                            @Html.LabelFor(model => model.per_CorreoElectronico, new { @class = "control-label col-md-1" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.per_CorreoElectronico)
                                @Html.ValidationMessageFor(model => model.per_CorreoElectronico)
                            </div>
                        </div>

                        <hr />
                        <div class="col-md-12">
                            <h3>Información de su cuenta.</h3>
                        </div>
                        <br /><br />

                        <div class="form-group" id="data_3">
                            @Html.Partial("_AddUsers", new Inspinia_MVC5.Models.cPersonasUsuarios())
                        </div>

                        @*ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
        <div class="form-group">
            @Html.LabelFor(model => model.per_EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("per_EstadoCivil", null, htmlAttributes: new { @class = "required form-control" })
                @Html.ValidationMessageFor(model => model.per_EstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>
        ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo*@

                        <hr />
                        <div class="form-group">
                            <div class="col-md-12">
                                <h3>Previsualizar:</h3>
                            </div>
                            <div class="col-md-12">
                                <div id="divImagen" class="col-md-2">
                                    <img id="preview" class="img-thumbnail" src="~/Images/WashE/unnamed.png" style="width:100%;height:"30%"/>
                                </div>
                                <div class="col-md-8">
                                    <p id="nombrep"></p>
                                    <b><p>Nombre de usuario:</p></b>
                                    <p id="userp">•</p>
                                    <b><p>Email:</p></b>
                                    <p id="emailp">•</p>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" id="btnGuardar" value="Registrar" class="btn btn-primary" />
                                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                            </div>
                        </div>
                    </div>
                        }

                    </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/Scripts/app/Mascara")
    @Scripts.Render("~/plugins/dataPicker")


    <script type="text/javascript">

        $('#btnGuardar').click(function () {
            var c = $('#usu_Contrasenia').val();
            var cc = $('#usu_Contrasenia1').val();
            if (c != cc) {
                $('#errorclave').text('Las contraseñas no coinciden');
                event.preventDefault();
            }
        });
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#preview').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]); // convert to base64 string
            }
        }

        $("#file").change(function () {
            readURL(this);

        });
        
        $("#per_Nombres,#per_Apellidos").change(
            function () {
                var a = $("#per_Nombres").val();
                var b = $("#per_Apellidos").val();
                var c = a + " " + b;
                $("#nombrep").text(c);
            });

        $("#usu_NombreDeUsuario").change(
            function () {
                var a = $("#usu_NombreDeUsuario").val();
                $("#userp").text(a);
            }
        );
        $("#per_CorreoElectronico").change(
            function () {
                var a = $("#per_CorreoElectronico").val();
                $("#emailp").text(a);
            }
        );
        
        $(document).ready(function () {
            $('#per_Enviar').hide();
            $("input").prop('required', true);
        });

        var fecha = new Date;
        var anio = fecha.getFullYear() - 21;

        $('#data_3 .input-group.date').datepicker({
            startView: 2,
            todayBtn: "linked",
            endDate: "01/01/" + anio,
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true
        });

        //$('#per_FechaNacimiento').change(function () {
        //    var a = $('#per_FechaNacimiento').val().toString();
        //    var b = a.replace("/", "-");
        //    var c = b.replace("/", "-");

        //    $('#per_Enviar').val("1995-07-05");
        //    alert(c);
        //});$("#id").css("display", "none");


        $('#per_FechaNacimiento').change(function () {
            var a = $('#per_FechaNacimiento').val();
            var fecha = $('#per_FechaNacimiento').val().split("/");
            var c = fecha[2] + '-' + fecha[0] + '-' + fecha[1];
            $('#per_Enviar').val(c);


        });
    </script>
}