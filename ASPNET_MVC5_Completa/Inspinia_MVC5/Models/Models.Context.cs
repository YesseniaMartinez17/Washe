//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspinia_MVC5.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WashEEntities : DbContext
    {
        public WashEEntities()
            : base("name=WashEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbPedidos> tbPedidos { get; set; }
        public virtual DbSet<tbPedidosDetalle> tbPedidosDetalle { get; set; }
        public virtual DbSet<tbPersonas> tbPersonas { get; set; }
        public virtual DbSet<SolicitudesApartadas> SolicitudesApartadas { get; set; }
        public virtual DbSet<tbCategoriaServicios> tbCategoriaServicios { get; set; }
        public virtual DbSet<tbAcciones> tbAcciones { get; set; }
        public virtual DbSet<tbAccionRol> tbAccionRol { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<ServicioExterno> ServicioExterno { get; set; }
        public virtual DbSet<tbServicios> tbServicios { get; set; }
        public virtual DbSet<tbSuscripciones> tbSuscripciones { get; set; }
    
        public virtual ObjectResult<UDP_Persona_tbPersonas_Insert_Result> UDP_Persona_tbPersonas_Insert(string per_Identidad, string per_Nombres, string per_Apellidos, Nullable<System.DateTime> per_FechaNacimiento, string per_Telefono, string per_CorreoElectronico, Nullable<int> per_UsuarioCrea, Nullable<System.DateTime> per_FechaCrea)
        {
            var per_IdentidadParameter = per_Identidad != null ?
                new ObjectParameter("per_Identidad", per_Identidad) :
                new ObjectParameter("per_Identidad", typeof(string));
    
            var per_NombresParameter = per_Nombres != null ?
                new ObjectParameter("per_Nombres", per_Nombres) :
                new ObjectParameter("per_Nombres", typeof(string));
    
            var per_ApellidosParameter = per_Apellidos != null ?
                new ObjectParameter("per_Apellidos", per_Apellidos) :
                new ObjectParameter("per_Apellidos", typeof(string));
    
            var per_FechaNacimientoParameter = per_FechaNacimiento.HasValue ?
                new ObjectParameter("per_FechaNacimiento", per_FechaNacimiento) :
                new ObjectParameter("per_FechaNacimiento", typeof(System.DateTime));
    
            var per_TelefonoParameter = per_Telefono != null ?
                new ObjectParameter("per_Telefono", per_Telefono) :
                new ObjectParameter("per_Telefono", typeof(string));
    
            var per_CorreoElectronicoParameter = per_CorreoElectronico != null ?
                new ObjectParameter("per_CorreoElectronico", per_CorreoElectronico) :
                new ObjectParameter("per_CorreoElectronico", typeof(string));
    
            var per_UsuarioCreaParameter = per_UsuarioCrea.HasValue ?
                new ObjectParameter("per_UsuarioCrea", per_UsuarioCrea) :
                new ObjectParameter("per_UsuarioCrea", typeof(int));
    
            var per_FechaCreaParameter = per_FechaCrea.HasValue ?
                new ObjectParameter("per_FechaCrea", per_FechaCrea) :
                new ObjectParameter("per_FechaCrea", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Persona_tbPersonas_Insert_Result>("UDP_Persona_tbPersonas_Insert", per_IdentidadParameter, per_NombresParameter, per_ApellidosParameter, per_FechaNacimientoParameter, per_TelefonoParameter, per_CorreoElectronicoParameter, per_UsuarioCreaParameter, per_FechaCreaParameter);
        }
    
        public virtual ObjectResult<UDP_Seg_tbUsuario_Insert_Result> UDP_Seg_tbUsuario_Insert(string usu_NombreUsuario, string usu_Password, Nullable<int> rol_Id, Nullable<int> per_Id, byte[] per_foto)
        {
            var usu_NombreUsuarioParameter = usu_NombreUsuario != null ?
                new ObjectParameter("usu_NombreUsuario", usu_NombreUsuario) :
                new ObjectParameter("usu_NombreUsuario", typeof(string));
    
            var usu_PasswordParameter = usu_Password != null ?
                new ObjectParameter("usu_Password", usu_Password) :
                new ObjectParameter("usu_Password", typeof(string));
    
            var rol_IdParameter = rol_Id.HasValue ?
                new ObjectParameter("rol_Id", rol_Id) :
                new ObjectParameter("rol_Id", typeof(int));
    
            var per_IdParameter = per_Id.HasValue ?
                new ObjectParameter("per_Id", per_Id) :
                new ObjectParameter("per_Id", typeof(int));
    
            var per_fotoParameter = per_foto != null ?
                new ObjectParameter("per_foto", per_foto) :
                new ObjectParameter("per_foto", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Seg_tbUsuario_Insert_Result>("UDP_Seg_tbUsuario_Insert", usu_NombreUsuarioParameter, usu_PasswordParameter, rol_IdParameter, per_IdParameter, per_fotoParameter);
        }
    
        public virtual ObjectResult<UDP_Fact_tbPedidos_Insert_Result> UDP_Fact_tbPedidos_Insert(Nullable<int> per_Id, Nullable<System.DateTime> pdidos_Fecha, string pdidos_ubicacion, string pdidos_Lat, string pdidos_Lng, Nullable<decimal> pdidos_Total)
        {
            var per_IdParameter = per_Id.HasValue ?
                new ObjectParameter("per_Id", per_Id) :
                new ObjectParameter("per_Id", typeof(int));
    
            var pdidos_FechaParameter = pdidos_Fecha.HasValue ?
                new ObjectParameter("pdidos_Fecha", pdidos_Fecha) :
                new ObjectParameter("pdidos_Fecha", typeof(System.DateTime));
    
            var pdidos_ubicacionParameter = pdidos_ubicacion != null ?
                new ObjectParameter("pdidos_ubicacion", pdidos_ubicacion) :
                new ObjectParameter("pdidos_ubicacion", typeof(string));
    
            var pdidos_LatParameter = pdidos_Lat != null ?
                new ObjectParameter("pdidos_Lat", pdidos_Lat) :
                new ObjectParameter("pdidos_Lat", typeof(string));
    
            var pdidos_LngParameter = pdidos_Lng != null ?
                new ObjectParameter("pdidos_Lng", pdidos_Lng) :
                new ObjectParameter("pdidos_Lng", typeof(string));
    
            var pdidos_TotalParameter = pdidos_Total.HasValue ?
                new ObjectParameter("pdidos_Total", pdidos_Total) :
                new ObjectParameter("pdidos_Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Fact_tbPedidos_Insert_Result>("UDP_Fact_tbPedidos_Insert", per_IdParameter, pdidos_FechaParameter, pdidos_ubicacionParameter, pdidos_LatParameter, pdidos_LngParameter, pdidos_TotalParameter);
        }
    
        public virtual ObjectResult<UDP_Fact_tbPedidosDetalle_Insert_Result> UDP_Fact_tbPedidosDetalle_Insert(Nullable<int> pdidos_Id, Nullable<int> serv_Id, Nullable<decimal> pdet_PrecioActual)
        {
            var pdidos_IdParameter = pdidos_Id.HasValue ?
                new ObjectParameter("pdidos_Id", pdidos_Id) :
                new ObjectParameter("pdidos_Id", typeof(int));
    
            var serv_IdParameter = serv_Id.HasValue ?
                new ObjectParameter("serv_Id", serv_Id) :
                new ObjectParameter("serv_Id", typeof(int));
    
            var pdet_PrecioActualParameter = pdet_PrecioActual.HasValue ?
                new ObjectParameter("pdet_PrecioActual", pdet_PrecioActual) :
                new ObjectParameter("pdet_PrecioActual", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Fact_tbPedidosDetalle_Insert_Result>("UDP_Fact_tbPedidosDetalle_Insert", pdidos_IdParameter, serv_IdParameter, pdet_PrecioActualParameter);
        }
    
        public virtual ObjectResult<UDP_Prod_tbCategoriaServicios_Inactivar_Result> UDP_Prod_tbCategoriaServicios_Inactivar(Nullable<int> id, Nullable<int> usuario, Nullable<System.DateTime> fecha, string razon)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var razonParameter = razon != null ?
                new ObjectParameter("razon", razon) :
                new ObjectParameter("razon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Prod_tbCategoriaServicios_Inactivar_Result>("UDP_Prod_tbCategoriaServicios_Inactivar", idParameter, usuarioParameter, fechaParameter, razonParameter);
        }
    
        public virtual ObjectResult<UDP_Prod_tbCategoriaServicios_REactivar_Result> UDP_Prod_tbCategoriaServicios_REactivar(Nullable<int> id, Nullable<int> usuario, Nullable<System.DateTime> fecha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_Prod_tbCategoriaServicios_REactivar_Result>("UDP_Prod_tbCategoriaServicios_REactivar", idParameter, usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbServicios_Update_Result> UDP_prod_tbServicios_Update(Nullable<int> serv_Id, string serv_Titulo, string serv_Descripcion, Nullable<decimal> serv_Precio, string serv_Directorio, Nullable<System.DateTime> fecha, Nullable<int> usuario)
        {
            var serv_IdParameter = serv_Id.HasValue ?
                new ObjectParameter("serv_Id", serv_Id) :
                new ObjectParameter("serv_Id", typeof(int));
    
            var serv_TituloParameter = serv_Titulo != null ?
                new ObjectParameter("serv_Titulo", serv_Titulo) :
                new ObjectParameter("serv_Titulo", typeof(string));
    
            var serv_DescripcionParameter = serv_Descripcion != null ?
                new ObjectParameter("serv_Descripcion", serv_Descripcion) :
                new ObjectParameter("serv_Descripcion", typeof(string));
    
            var serv_PrecioParameter = serv_Precio.HasValue ?
                new ObjectParameter("serv_Precio", serv_Precio) :
                new ObjectParameter("serv_Precio", typeof(decimal));
    
            var serv_DirectorioParameter = serv_Directorio != null ?
                new ObjectParameter("serv_Directorio", serv_Directorio) :
                new ObjectParameter("serv_Directorio", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbServicios_Update_Result>("UDP_prod_tbServicios_Update", serv_IdParameter, serv_TituloParameter, serv_DescripcionParameter, serv_PrecioParameter, serv_DirectorioParameter, fechaParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbServicios_Habilitar_Result> UDP_prod_tbServicios_Habilitar(Nullable<int> serv_Id, Nullable<int> usuario, Nullable<System.DateTime> fecha)
        {
            var serv_IdParameter = serv_Id.HasValue ?
                new ObjectParameter("serv_Id", serv_Id) :
                new ObjectParameter("serv_Id", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbServicios_Habilitar_Result>("UDP_prod_tbServicios_Habilitar", serv_IdParameter, usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbServicios_Inhabilitar_Result> UDP_prod_tbServicios_Inhabilitar(Nullable<int> serv_Id, string serv_RazonInactivo, Nullable<int> usuario, Nullable<System.DateTime> fecha)
        {
            var serv_IdParameter = serv_Id.HasValue ?
                new ObjectParameter("serv_Id", serv_Id) :
                new ObjectParameter("serv_Id", typeof(int));
    
            var serv_RazonInactivoParameter = serv_RazonInactivo != null ?
                new ObjectParameter("serv_RazonInactivo", serv_RazonInactivo) :
                new ObjectParameter("serv_RazonInactivo", typeof(string));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbServicios_Inhabilitar_Result>("UDP_prod_tbServicios_Inhabilitar", serv_IdParameter, serv_RazonInactivoParameter, usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbSuscripciones_Habilitar_Result> UDP_prod_tbSuscripciones_Habilitar(Nullable<int> sus_Id, Nullable<int> usuario, Nullable<System.DateTime> fecha)
        {
            var sus_IdParameter = sus_Id.HasValue ?
                new ObjectParameter("sus_Id", sus_Id) :
                new ObjectParameter("sus_Id", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbSuscripciones_Habilitar_Result>("UDP_prod_tbSuscripciones_Habilitar", sus_IdParameter, usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbSuscripciones_Inhabilitar_Result> UDP_prod_tbSuscripciones_Inhabilitar(Nullable<int> sus_Id, Nullable<int> usuario, Nullable<System.DateTime> fecha, string sus_RazonInactivo)
        {
            var sus_IdParameter = sus_Id.HasValue ?
                new ObjectParameter("sus_Id", sus_Id) :
                new ObjectParameter("sus_Id", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var sus_RazonInactivoParameter = sus_RazonInactivo != null ?
                new ObjectParameter("sus_RazonInactivo", sus_RazonInactivo) :
                new ObjectParameter("sus_RazonInactivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbSuscripciones_Inhabilitar_Result>("UDP_prod_tbSuscripciones_Inhabilitar", sus_IdParameter, usuarioParameter, fechaParameter, sus_RazonInactivoParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbSuscripciones_Update_Result> UDP_prod_tbSuscripciones_Update(Nullable<int> sus_Id, Nullable<decimal> serv_Precio, string serv_Descripcion, Nullable<int> mesesVigencia, Nullable<int> sus_Cant, Nullable<int> usuario, Nullable<System.DateTime> fecha)
        {
            var sus_IdParameter = sus_Id.HasValue ?
                new ObjectParameter("sus_Id", sus_Id) :
                new ObjectParameter("sus_Id", typeof(int));
    
            var serv_PrecioParameter = serv_Precio.HasValue ?
                new ObjectParameter("serv_Precio", serv_Precio) :
                new ObjectParameter("serv_Precio", typeof(decimal));
    
            var serv_DescripcionParameter = serv_Descripcion != null ?
                new ObjectParameter("serv_Descripcion", serv_Descripcion) :
                new ObjectParameter("serv_Descripcion", typeof(string));
    
            var mesesVigenciaParameter = mesesVigencia.HasValue ?
                new ObjectParameter("mesesVigencia", mesesVigencia) :
                new ObjectParameter("mesesVigencia", typeof(int));
    
            var sus_CantParameter = sus_Cant.HasValue ?
                new ObjectParameter("sus_Cant", sus_Cant) :
                new ObjectParameter("sus_Cant", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbSuscripciones_Update_Result>("UDP_prod_tbSuscripciones_Update", sus_IdParameter, serv_PrecioParameter, serv_DescripcionParameter, mesesVigenciaParameter, sus_CantParameter, usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbServicios_Insert_Result> UDP_prod_tbServicios_Insert(Nullable<int> cserv_Id, string serv_Titulo, string serv_Descripcion, Nullable<decimal> serv_Precio, string serv_Directorio, Nullable<System.DateTime> fecha, Nullable<int> usuario)
        {
            var cserv_IdParameter = cserv_Id.HasValue ?
                new ObjectParameter("cserv_Id", cserv_Id) :
                new ObjectParameter("cserv_Id", typeof(int));
    
            var serv_TituloParameter = serv_Titulo != null ?
                new ObjectParameter("serv_Titulo", serv_Titulo) :
                new ObjectParameter("serv_Titulo", typeof(string));
    
            var serv_DescripcionParameter = serv_Descripcion != null ?
                new ObjectParameter("serv_Descripcion", serv_Descripcion) :
                new ObjectParameter("serv_Descripcion", typeof(string));
    
            var serv_PrecioParameter = serv_Precio.HasValue ?
                new ObjectParameter("serv_Precio", serv_Precio) :
                new ObjectParameter("serv_Precio", typeof(decimal));
    
            var serv_DirectorioParameter = serv_Directorio != null ?
                new ObjectParameter("serv_Directorio", serv_Directorio) :
                new ObjectParameter("serv_Directorio", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbServicios_Insert_Result>("UDP_prod_tbServicios_Insert", cserv_IdParameter, serv_TituloParameter, serv_DescripcionParameter, serv_PrecioParameter, serv_DirectorioParameter, fechaParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<UDP_prod_tbSuscripciones_Insert_Result> UDP_prod_tbSuscripciones_Insert(Nullable<int> serv_Id, Nullable<decimal> serv_Precio, string serv_Descripcion, Nullable<int> mesesVigencia, Nullable<int> usuario, Nullable<System.DateTime> fecha, Nullable<int> sus_Cant)
        {
            var serv_IdParameter = serv_Id.HasValue ?
                new ObjectParameter("serv_Id", serv_Id) :
                new ObjectParameter("serv_Id", typeof(int));
    
            var serv_PrecioParameter = serv_Precio.HasValue ?
                new ObjectParameter("serv_Precio", serv_Precio) :
                new ObjectParameter("serv_Precio", typeof(decimal));
    
            var serv_DescripcionParameter = serv_Descripcion != null ?
                new ObjectParameter("serv_Descripcion", serv_Descripcion) :
                new ObjectParameter("serv_Descripcion", typeof(string));
    
            var mesesVigenciaParameter = mesesVigencia.HasValue ?
                new ObjectParameter("mesesVigencia", mesesVigencia) :
                new ObjectParameter("mesesVigencia", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var sus_CantParameter = sus_Cant.HasValue ?
                new ObjectParameter("sus_Cant", sus_Cant) :
                new ObjectParameter("sus_Cant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UDP_prod_tbSuscripciones_Insert_Result>("UDP_prod_tbSuscripciones_Insert", serv_IdParameter, serv_PrecioParameter, serv_DescripcionParameter, mesesVigenciaParameter, usuarioParameter, fechaParameter, sus_CantParameter);
        }
    }
}
